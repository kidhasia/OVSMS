/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.29
 * Generated at: 2024-10-18 08:21:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class usersignup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>User Registration</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        :root {\r\n");
      out.write("            --primary-color: #1c2b4b;\r\n");
      out.write("            --secondary-color: #ffffff;\r\n");
      out.write("            --accent-color: #007aff;\r\n");
      out.write("            --text-color: #333333;\r\n");
      out.write("            --background-color: #f0f2f5;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n");
      out.write("            background-color: var(--background-color);\r\n");
      out.write("            color: var(--text-color);\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            line-height: 1.6;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .header {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: flex-end;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("\r\n");
      out.write("            color: var(--secondary-color);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Hamburger Menu Styling */\r\n");
      out.write("        .menu-icon {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            width: 35px;\r\n");
      out.write("            height: 30px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .menu-icon div {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 4px;\r\n");
      out.write("            background-color: #333;\r\n");
      out.write("            margin: 5px 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Dropdown list hidden by default */\r\n");
      out.write("        .dropdown-content {\r\n");
      out.write("            display: none;\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            min-width: 160px;\r\n");
      out.write("            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n");
      out.write("            z-index: 1;\r\n");
      out.write("            right: 10px; /* Align dropdown to the right */\r\n");
      out.write("            top: 50px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Dropdown item styling */\r\n");
      out.write("        .dropdown-content a {\r\n");
      out.write("            color: black;\r\n");
      out.write("            padding: 12px 16px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            display: block;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .dropdown-content a:hover {\r\n");
      out.write("            background-color: var(--accent-color);\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Show dropdown when clicked */\r\n");
      out.write("        .dropdown:hover .dropdown-content {\r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Registration form styling */\r\n");
      out.write("        .registration-container {\r\n");
      out.write("            max-width: 500px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("            background-color: var(--secondary-color);\r\n");
      out.write("            padding: 40px;\r\n");
      out.write("            border-radius: 20px;\r\n");
      out.write("            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h2 {\r\n");
      out.write("            color: var(--primary-color);\r\n");
      out.write("            font-size: 28px;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .input-container {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        label {\r\n");
      out.write("            display: block;\r\n");
      out.write("            margin-bottom: 8px;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"text\"],\r\n");
      out.write("        input[type=\"email\"],\r\n");
      out.write("        input[type=\"password\"] {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button {\r\n");
      out.write("            background-color: var(--accent-color);\r\n");
      out.write("            color: var(--secondary-color);\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 12px 15px;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background-color 0.3s ease;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            margin-top: 15px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button:hover {\r\n");
      out.write("            background-color: #0056b3;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .password-toggle {\r\n");
      out.write("            background-color: #6c757d;\r\n");
      out.write("            padding: 6px 12px;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            margin-top: 8px;\r\n");
      out.write("            width: auto;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-link {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-top: 25px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        a {\r\n");
      out.write("            color: var(--accent-color);\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Header.jsp", out, false);
      out.write("\r\n");
      out.write("    <!-- Header with hamburger menu for role navigation -->\r\n");
      out.write("    <div class=\"header\">\r\n");
      out.write("        <div class=\"dropdown\">\r\n");
      out.write("            <div class=\"menu-icon\" onclick=\"toggleMenu()\">\r\n");
      out.write("                <div></div>\r\n");
      out.write("                <div></div>\r\n");
      out.write("                <div></div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"dropdown-content\" id=\"roleDropdown\">\r\n");
      out.write("                <a href=\"#\">User</a>\r\n");
      out.write("                <a href=\"admin_registerartion.jsp\">Admin</a>\r\n");
      out.write("                <a href=\"SellerRegistration\">Seller</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"registration-container\">\r\n");
      out.write("        <h2>User Registration</h2>\r\n");
      out.write("        <form id=\"registrationForm\" action=\"insertservlet\" method=\"post\">\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"username\">Username</label>\r\n");
      out.write("                <input type=\"text\" id=\"username\" name=\"username\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"email\">Email</label>\r\n");
      out.write("                <input type=\"email\" id=\"email\" name=\"email\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"contactNumber\">Contact Number</label>\r\n");
      out.write("                <input type=\"text\" id=\"contactNumber\" name=\"user_conNum\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"address\">Address</label>\r\n");
      out.write("                <input type=\"text\" id=\"address\" name=\"user_address\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"password\">Password</label>\r\n");
      out.write("                <input type=\"password\" id=\"password\" name=\"password\" required>\r\n");
      out.write("                <button type=\"button\" class=\"password-toggle\" onclick=\"togglePassword('password', this)\">Show</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"confirmPassword\">Confirm Password</label>\r\n");
      out.write("                <input type=\"password\" id=\"confirmPassword\" name=\"password\" required>\r\n");
      out.write("                <button type=\"button\" class=\"password-toggle\" onclick=\"togglePassword('confirmPassword', this)\">Show</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <button type=\"submit\">Register</button>\r\n");
      out.write("        </form>\r\n");
      out.write("        <div class=\"login-link\">\r\n");
      out.write("            Already have an account? <a href=\"\">Log in</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        function togglePassword(fieldId, toggleButton) {\r\n");
      out.write("            var field = document.getElementById(fieldId);\r\n");
      out.write("            if (field.type === \"password\") {\r\n");
      out.write("                field.type = \"text\";\r\n");
      out.write("                toggleButton.innerHTML = \"Hide\";\r\n");
      out.write("            } else {\r\n");
      out.write("                field.type = \"password\";\r\n");
      out.write("                toggleButton.innerHTML = \"Show\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Function to toggle the hamburger dropdown\r\n");
      out.write("        function toggleMenu() {\r\n");
      out.write("            var dropdown = document.getElementById(\"roleDropdown\");\r\n");
      out.write("            if (dropdown.style.display === \"block\") {\r\n");
      out.write("                dropdown.style.display = \"none\";\r\n");
      out.write("            } else {\r\n");
      out.write("                dropdown.style.display = \"block\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    <br/>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
