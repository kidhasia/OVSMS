/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.29
 * Generated at: 2024-10-20 20:58:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class payment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <title>Payment Gateway</title>\r\n");
      out.write("  <style>\r\n");
      out.write("    body {\r\n");
      out.write("      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n");
      out.write("      background-color: #1C1E21;\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: center;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("      height: 100vh;\r\n");
      out.write("      margin: 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .payment-container {\r\n");
      out.write("      background-color: #FFFFFF;\r\n");
      out.write("      padding: 30px 35px; \r\n");
      out.write("      border-radius: 15px;\r\n");
      out.write("      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      max-width: 420px;\r\n");
      out.write("      color: #333;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    h2 {\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      color: #1C3B57;\r\n");
      out.write("      margin-bottom: 30px;\r\n");
      out.write("      font-size: 24px;\r\n");
      out.write("      font-weight: 600;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .payment-options {\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: space-between;\r\n");
      out.write("      margin-bottom: 25px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .payment-option {\r\n");
      out.write("      background-color: #F4F4F4;\r\n");
      out.write("      padding: 15px;\r\n");
      out.write("      border: 2px solid #DDDDDD;\r\n");
      out.write("      border-radius: 10px;\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("      transition: background-color 0.3s ease, border-color 0.3s ease;\r\n");
      out.write("      width: 48%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .payment-option:hover {\r\n");
      out.write("      background-color: #1C3B57;\r\n");
      out.write("      color: white;\r\n");
      out.write("      border-color: #1C3B57;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .payment-option img {\r\n");
      out.write("      width: 35px;\r\n");
      out.write("      margin-bottom: 8px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .form-group {\r\n");
      out.write("      margin-bottom: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .form-group label {\r\n");
      out.write("      display: block;\r\n");
      out.write("      margin-bottom: 8px;\r\n");
      out.write("      color: #1C1E21;\r\n");
      out.write("      font-weight: 500;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .form-group input {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      padding: 12px;\r\n");
      out.write("      font-size: 16px;\r\n");
      out.write("      border: 2px solid #DDDDDD;\r\n");
      out.write("      border-radius: 8px;\r\n");
      out.write("      transition: border-color 0.3s ease;\r\n");
      out.write("      box-sizing: border-box; \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .form-group input:focus {\r\n");
      out.write("      border-color: #1C3B57;\r\n");
      out.write("      outline: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .form-row {\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: space-between;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .form-row .form-group {\r\n");
      out.write("      width: 48%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .btn {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      padding: 15px;\r\n");
      out.write("      background-color: #1C3B57;\r\n");
      out.write("      color: white;\r\n");
      out.write("      border: none;\r\n");
      out.write("      border-radius: 8px;\r\n");
      out.write("      font-size: 18px;\r\n");
      out.write("      font-weight: 600;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("      margin-top: 25px;\r\n");
      out.write("      transition: background-color 0.3s ease;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .btn:hover {\r\n");
      out.write("      background-color: #141A22;\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"payment-container\">\r\n");
      out.write("    <h2>Payment Gateway</h2>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"payment-options\">\r\n");
      out.write("      <div class=\"payment-option\">\r\n");
      out.write("        <img src=\"https://img.icons8.com/ios-filled/50/000000/google-pay.png\" alt=\"GPay\">\r\n");
      out.write("        <div>Google Pay</div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"payment-option\">\r\n");
      out.write("        <img src=\"https://img.icons8.com/ios-filled/50/000000/apple-pay.png\" alt=\"Apple Pay\">\r\n");
      out.write("        <div>Apple Pay</div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <form>\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"cardNumber\">Card Number</label>\r\n");
      out.write("        <input type=\"text\" id=\"cardNumber\" placeholder=\"1234 5678 9012 3456\" maxlength=\"19\">\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"form-row\">\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("          <label for=\"expiryDate\">Expiry Date</label>\r\n");
      out.write("          <input type=\"text\" id=\"expiryDate\" placeholder=\"MM/YY\" maxlength=\"5\">\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("          <label for=\"cvv\">CVV</label>\r\n");
      out.write("          <input type=\"text\" id=\"cvv\" placeholder=\"123\" maxlength=\"3\">\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"cardName\">Cardholder Name</label>\r\n");
      out.write("        <input type=\"text\" id=\"cardName\" placeholder=\"Enter Your Name\">\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <button type=\"button\" class=\"btn\">Pay Now</button>\r\n");
      out.write("    </form>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
