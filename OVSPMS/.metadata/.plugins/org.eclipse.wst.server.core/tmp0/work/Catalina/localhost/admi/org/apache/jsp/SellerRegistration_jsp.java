/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.29
 * Generated at: 2024-10-21 12:42:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class SellerRegistration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Seller Registration</title>\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"CSS/SellerRegistration.css\">\r\n");
      out.write("       \r\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Header.jsp", out, false);
      out.write("\r\n");
      out.write("         <br>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"registration-container\">\r\n");
      out.write("        <h2>Seller Registration</h2>\r\n");
      out.write("        <form id=\"registrationForm\" action=\"SellerRegServlet\" method=\"post\">\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"username\">Username</label>\r\n");
      out.write("                <input type=\"text\" id=\"username\" name=\"user_name\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"email\">Email</label>\r\n");
      out.write("                <input type=\"email\" id=\"email\" name=\"user_email\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"contactNumber\">Contact Number</label>\r\n");
      out.write("                <input type=\"text\" id=\"contactNumber\" name=\"user_conNum\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"address\">Address</label>\r\n");
      out.write("                <input type=\"text\" id=\"address\" name=\"user_address\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"password\">Password</label>\r\n");
      out.write("                <input type=\"password\" id=\"password\" name=\"user_password\" required>\r\n");
      out.write("                <button type=\"button\" class=\"password-toggle\" onclick=\"togglePassword('password')\">Show</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"confirmPassword\">Confirm Password</label>\r\n");
      out.write("                <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" required>\r\n");
      out.write("                <button type=\"button\" class=\"password-toggle\" onclick=\"togglePassword('confirmPassword')\">Show</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <button type=\"submit\">Register</button>\r\n");
      out.write("        </form>\r\n");
      out.write("        <div class=\"login-link\">\r\n");
      out.write("            Already have an account? <a href=\"sellarlogin.jsp\">Log in</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <br/>\r\n");
      out.write("    <script>function togglePassword(id) {\r\n");
      out.write("        const passwordInput = document.getElementById(id);\r\n");
      out.write("        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';\r\n");
      out.write("        passwordInput.setAttribute('type', type);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function validatePasswords() {\r\n");
      out.write("        const password = document.getElementById('password').value;\r\n");
      out.write("        const confirmPassword = document.getElementById('confirmPassword').value;\r\n");
      out.write("        if (password !== confirmPassword) {\r\n");
      out.write("            alert('Passwords do not match');\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        return true;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    document.getElementById('registrationForm').addEventListener('submit', function(event) {\r\n");
      out.write("        if (!validatePasswords()) {\r\n");
      out.write("            event.preventDefault();\r\n");
      out.write("        }\r\n");
      out.write("        function validatePasswords() {\r\n");
      out.write("            const password = document.getElementById('password').value;\r\n");
      out.write("            const confirmPassword = document.getElementById('confirmPassword').value;\r\n");
      out.write("\r\n");
      out.write("            if (password.length < 10) {\r\n");
      out.write("                alert('Password must be at least 10 characters long');\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            //Check pw\r\n");
      out.write("            if (password !== confirmPassword) {\r\n");
      out.write("                alert('Passwords do not match');\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            return true;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        document.getElementById('registrationForm').addEventListener('submit', function(event) {\r\n");
      out.write("            if (!validatePasswords()) {\r\n");
      out.write("                event.preventDefault();  // Prevent form submission if validation fails\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("    });</script>\r\n");
      out.write("        <script src=\"JS/SellerRegistration.js\"></script>   \r\n");
      out.write("            \r\n");
      out.write("                ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Footer.jsp", out, false);
      out.write("\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
